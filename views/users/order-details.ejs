<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <style>
        body {
            font-family: 'Times New Roman', Times, serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .order-container {
            max-width: 500px;
            margin: 30px auto;
            background-color: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            font-family: 'Times New Roman', Times, serif;
        }
        h1 {
            text-align: center;
            color: #333;
            font-size: 2em;
            margin-bottom: 20px;
            font-family: 'Times New Roman', Times, serif;
        }
        h2 {
            color: #555;
            margin-bottom: 10px;
        }
        .product-item {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #ddd;
            background-color: #f9f9f9;
        }
        .product-im {
            width: 60px;
            height: 60px;
            object-fit: cover;
           
            margin-right: 20px;
        }
        .product-details {
            flex-grow: 1;
        }
        .product-details h3 {
            margin: 0;
            font-size: 1.2em;
            color: #333;
        }
        .product-details p {
            margin: 5px 0;
            color: #666;
        }
        .return-button, .cancel-button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            color: #fff;
            margin-top: 10px;
        }
        .return-button {
            background-color: #007bff;
        }
        .cancel-button {
            background-color: #dc3545;
        }
        .address-section {
            margin-top: 20px;
        }
        .address-section h3 {
            margin-top: 0;
            color: #333;
        }
        .address-section p {
            margin: 5px 0;
            color: #666;
        }
        .back-link {
            display: inline-block;
            margin-top: 20px;
            color: #007bff;
            text-decoration: none;
        }
        .back-link:hover {
            text-decoration: underline;
        }
    </style>
</head>

<% var loggedin = true; %> <!-- You can set it to true or false based on your logic -->
<%- include('../layouts/user-header.ejs', { loggedin: loggedin, user: user }) %>

<%- include('../layouts/user-sidebar.ejs') %>
<body>
<br><br><br>
    <div class="order-container">
        <h1 style="font-family: 'Times New Roman', Times, serif; color: black; font-weight: bold;">Order Details</h1><br>
<br>
       
        <h2 style="font-family: 'Times New Roman', Times, serif;">Payment Mode: <%= order.paymentMethod %></h2>
        <br>
        <% order.products.forEach(product => { %>
            <div class="product-item ">
                <img src="<%= product.product.pictures[0] %>" alt="<%= product.product.name %>" class="product-im">
                <div class="product-details">
                    <h3 style="font-family: 'Times New Roman', Times, serif; color: black; font-weight: bold;" ><%= product.product.name %></h3>
                    <p style="font-family: 'Times New Roman', Times, serif;">Quantity: <%= product.quantity %></p>
                    <p style="font-family: 'Times New Roman', Times, serif;">Price: $<%= (product.price * product.quantity).toFixed(2) %></p>
                    <!-- Inside the forEach loop where return buttons are generated -->
                    <% if (order.status === 'delivered') { %>
                        <button class="return-button" data-order-id="<%= order._id %>" data-product-id="<%= product.product._id %>" data-quantity="<%= product.quantity %>">Return</button>
                    <% } %>
                </div>
            </div>
        <% }); %>

        <div class="address-section">
            <h3 style="font-family: 'Times New Roman', Times, serif; color: black; font-weight: bold;">Shipping Address</h3>
            <% order.addresses.forEach(address => { %>
                <p style="font-family: 'Times New Roman', Times, serif;"><%= address.street %>, <%= address.city %>, <%= address.state %> <%= address.postalCode %>, <%= address.country %></p>
            <% }); %>
        </div>

        <!-- Cancel Order Button -->
        <% if (order.status !== 'pending') { %>
            <button id="cancelOrderButton" class="cancel-button" style="font-family: 'Times New Roman', Times, serif;">Cancel</button>
        <% } %>

        <a href="/order" class="back-link" style="font-family: 'Times New Roman', Times, serif;">Back to Orders</a>
    </div>

    <!-- Include SweetAlert CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.getElementById('cancelOrderButton').addEventListener('click', function() {
            const orderId = '<%= orderId %>';
            const userId = '<%= userId %>';
            const refundAmount = '<%= totalAmount %>';
    
            if (!userId) {
                console.error('User data is not available.');
                return;
            }
    
            // Show confirmation dialog using SweetAlert
            Swal.fire({
                title: 'Are you sure?',
                text: "You are about to cancel this order. This action cannot be undone.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#dc3545',
                cancelButtonColor: '#007bff',
                confirmButtonText: 'Yes, cancel it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/cancel-order', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ userId, orderId, refundAmount })
                    })
                    .then(response => {
                        if (response.ok) {
                            Swal.fire('Order Canceled!', 'Your order has been successfully canceled.', 'success')
                                .then(() => {
                                    window.location.href = '/order';
                                });
                        } else {
                            throw new Error('Failed to cancel order');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire('Error', 'Failed to cancel order. Please try again.', 'error');
                    });
                }
            });
        });
    </script>
    
    <script>
        document.querySelectorAll('.return-button').forEach(button => {
            button.addEventListener('click', function() {
                const orderId = this.dataset.orderId;
                const productId = this.dataset.productId;
                const quantity = this.dataset.quantity;
    
                fetch('/return-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, productId, quantity })
                })
                .then(response => {
                    if (response.ok) {
                        Swal.fire('Success', 'Order returned successfully', 'success')
                            .then(() => {
                                window.location.reload(); // Refresh the page after successful return
                            });
                    } else {
                        throw new Error('Failed to return order');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Failed to return order. Please try again.', 'error');
                });
            });
        });
    </script>
    
</body>
</html>
